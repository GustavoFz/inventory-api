// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String  @unique
  passwordHash String
  role         String?
}

model Product {
  id                  String        @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  brandId             String        @db.ObjectId
  groupId             String        @db.ObjectId
  subgroupId          String?       @db.ObjectId
  barCode             String?       @unique
  controlSerialNumber Boolean
  transaction         Transaction[]
  Item                Item[]

  brand    Brand     @relation(fields: [brandId], references: [id])
  group    Group     @relation(fields: [groupId], references: [id])
  subgroup Subgroup? @relation(fields: [subgroupId], references: [id])

  created_at DateTime @default(now())

  @@map("products")
}

model Item {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  productId    String  @db.ObjectId
  serialNumber String
  iSactive     Boolean

  product Product @relation(fields: [productId], references: [id])

  created_at  DateTime      @default(now())
  Transaction Transaction[]
}

model Brand {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  product Product[]

  created_at DateTime @default(now())

  @@map("brands")
}

model Group {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  subgroup Subgroup[]
  product  Product[]

  created_at DateTime @default(now())

  @@map("groups")
}

model Subgroup {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  groupId String    @db.ObjectId
  product Product[]

  group Group @relation(fields: [groupId], references: [id])

  created_at DateTime @default(now())

  @@map("subgroups")
}

model Transaction {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  itemId    String? @db.ObjectId
  value     Int
  type      String

  product Product @relation(fields: [productId], references: [id])
  item    Item?   @relation(fields: [itemId], references: [id])

  created_at DateTime @default(now())

  @@map("transactions")
}

model Token {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String
  email String

  created_at DateTime @default(now())

  @@map("tokens")
}
